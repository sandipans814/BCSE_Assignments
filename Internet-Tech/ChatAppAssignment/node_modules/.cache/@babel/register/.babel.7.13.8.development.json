{
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Node Projects\\\\ChatAppAssignment\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Node Projects\\\\ChatAppAssignment\",\"filename\":\"D:\\\\Node Projects\\\\ChatAppAssignment\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Node Projects\\\\ChatAppAssignment\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Node Projects\\ChatAppAssignment\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Node Projects\\ChatAppAssignment",
      "filename": "D:\\Node Projects\\ChatAppAssignment\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Node Projects\\ChatAppAssignment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Node Projects\\ChatAppAssignment\\src\\index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Node Projects\\ChatAppAssignment\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Node Projects\\ChatAppAssignment\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _sockets = _interopRequireDefault(require(\"./sockets\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); // getting an Express app\n\nvar server = require(\"http\").Server(app); // creating the server, will be used in socket.io\n\n\n// used in handling image upload\nvar _require = require(\"uuid\"),\n    uuid4 = _require.v4; // get a random uuid4, v4 is imported as uuid4\n\n\napp.set(\"views\", _path[\"default\"].join(__dirname, \"/views\")); // views shall be served from views/ dir\n\napp.set(\"view engine\", \"ejs\"); // ejs is the view engine\n\napp.use(_express[\"default\"][\"static\"](\"public\")); // static will be served from public/\n\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(require(\"express-fileupload\")({\n  // middleware handling file upload\n  createParentPath: true\n}));\nvar db = {};\nvar socketDb = {};\nvar msgDb = {};\n\n_sockets[\"default\"].init(server, db, socketDb);\n\napp.get(\"/\", function (req, res) {\n  res.redirect(\"login\");\n});\napp.get(\"/login\", function (req, res) {\n  res.render(\"login\");\n});\napp.post(\"/room\", function (req, res) {\n  res.render(\"room\", {\n    username: req.body.username,\n    name: req.body.firstName + \" \" + req.body.lastName\n  });\n});\napp.post(\"/images\", function (req, res) {\n  var targetFile = req.files[\"files[]\"]; // get the image from posted files[]\n\n  var extName = _path[\"default\"].extname(targetFile.name); // get the extension\n\n\n  var baseName = uuid4(); // generate a random uuid4, will be used as new name\n\n  var uploadDir = _path[\"default\"].join(__dirname, \"temp\", \"\".concat(baseName).concat(extName)); // uploadDir will be temp/{basename}.{extname}\n\n\n  targetFile.mv(uploadDir, function (err) {\n    // moving the uploaded image to upload dir\n    if (err) return res.status(500).send(err); // returning an error if failed\n  });\n  return res.send(\"\".concat(baseName).concat(extName)); // returning the image with new name\n});\napp.get(\"/image/:imagename\", function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname, \"temp\", req.params.imagename)); // serving the image at image/{imagename} (includes the extension)\n});\nserver.listen(5000, function () {\n  console.log(\"Get ready for some fun!!!\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInNlcnZlciIsInJlcXVpcmUiLCJTZXJ2ZXIiLCJ1dWlkNCIsInY0Iiwic2V0IiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImNyZWF0ZVBhcmVudFBhdGgiLCJkYiIsInNvY2tldERiIiwibXNnRGIiLCJzb2NrZXRzIiwiaW5pdCIsImdldCIsInJlcSIsInJlcyIsInJlZGlyZWN0IiwicmVuZGVyIiwicG9zdCIsInVzZXJuYW1lIiwiYm9keSIsIm5hbWUiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInRhcmdldEZpbGUiLCJmaWxlcyIsImV4dE5hbWUiLCJleHRuYW1lIiwiYmFzZU5hbWUiLCJ1cGxvYWREaXIiLCJtdiIsImVyciIsInN0YXR1cyIsInNlbmQiLCJzZW5kRmlsZSIsInBhcmFtcyIsImltYWdlbmFtZSIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBR0E7O0FBRUE7O0FBc0JBOzs7O0FBMUJBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBQXVCOztBQUN2QixJQUFNQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQVAsQ0FBZ0JDLE1BQWhCLENBQXVCSCxHQUF2QixDQUFmLEMsQ0FBNEM7OztBQUNuQjtlQUNIRSxPQUFPLENBQUMsTUFBRCxDO0lBQWpCRSxLLFlBQUpDLEUsRUFBK0I7OztBQUd2Q0wsR0FBRyxDQUFDTSxHQUFKLENBQVEsT0FBUixFQUFpQkMsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixDQUFqQixFLENBQWtEOztBQUNsRFQsR0FBRyxDQUFDTSxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QixFLENBQStCOztBQUMvQk4sR0FBRyxDQUFDVSxHQUFKLENBQVFDLDhCQUFlLFFBQWYsQ0FBUixFLENBQW1DOztBQUNuQ1gsR0FBRyxD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XFxOb2RlIFByb2plY3RzXFxDaGF0QXBwQXNzaWdubWVudFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7IC8vIGdldHRpbmcgYW4gRXhwcmVzcyBhcHBcclxuY29uc3Qgc2VydmVyID0gcmVxdWlyZShcImh0dHBcIikuU2VydmVyKGFwcCk7IC8vIGNyZWF0aW5nIHRoZSBzZXJ2ZXIsIHdpbGwgYmUgdXNlZCBpbiBzb2NrZXQuaW9cclxuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjsgLy8gdXNlZCBpbiBoYW5kbGluZyBpbWFnZSB1cGxvYWRcclxuY29uc3QgeyB2NDogdXVpZDQgfSA9IHJlcXVpcmUoXCJ1dWlkXCIpOyAvLyBnZXQgYSByYW5kb20gdXVpZDQsIHY0IGlzIGltcG9ydGVkIGFzIHV1aWQ0XHJcbmltcG9ydCBmcyBmcm9tIFwiZnNcIjtcclxuXHJcbmFwcC5zZXQoXCJ2aWV3c1wiLCBwYXRoLmpvaW4oX19kaXJuYW1lLCBcIi92aWV3c1wiKSk7IC8vIHZpZXdzIHNoYWxsIGJlIHNlcnZlZCBmcm9tIHZpZXdzLyBkaXJcclxuYXBwLnNldChcInZpZXcgZW5naW5lXCIsIFwiZWpzXCIpOyAvLyBlanMgaXMgdGhlIHZpZXcgZW5naW5lXHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoXCJwdWJsaWNcIikpOyAvLyBzdGF0aWMgd2lsbCBiZSBzZXJ2ZWQgZnJvbSBwdWJsaWMvXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5hcHAudXNlKFxyXG4gICAgZXhwcmVzcy51cmxlbmNvZGVkKHtcclxuICAgICAgICBleHRlbmRlZDogdHJ1ZSxcclxuICAgIH0pXHJcbik7XHJcblxyXG5hcHAudXNlKFxyXG4gICAgcmVxdWlyZShcImV4cHJlc3MtZmlsZXVwbG9hZFwiKSh7IC8vIG1pZGRsZXdhcmUgaGFuZGxpbmcgZmlsZSB1cGxvYWRcclxuICAgICAgICBjcmVhdGVQYXJlbnRQYXRoOiB0cnVlLFxyXG4gICAgfSlcclxuKTtcclxuXHJcbnZhciBkYiA9IHt9O1xyXG52YXIgc29ja2V0RGIgPSB7fTtcclxudmFyIG1zZ0RiID0ge307XHJcblxyXG5pbXBvcnQgc29ja2V0cyBmcm9tIFwiLi9zb2NrZXRzXCI7XHJcbnNvY2tldHMuaW5pdChzZXJ2ZXIsIGRiLCBzb2NrZXREYik7XHJcblxyXG5hcHAuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5yZWRpcmVjdChcImxvZ2luXCIpO1xyXG59KTtcclxuXHJcbmFwcC5nZXQoXCIvbG9naW5cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMucmVuZGVyKFwibG9naW5cIik7XHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoXCIvcm9vbVwiLCAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5yZW5kZXIoXCJyb29tXCIsIHtcclxuICAgICAgICB1c2VybmFtZTogcmVxLmJvZHkudXNlcm5hbWUsXHJcbiAgICAgICAgbmFtZTogcmVxLmJvZHkuZmlyc3ROYW1lICsgXCIgXCIgKyByZXEuYm9keS5sYXN0TmFtZSxcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KFwiL2ltYWdlc1wiLCAocmVxLCByZXMpID0+IHtcclxuICAgIGNvbnN0IHRhcmdldEZpbGUgPSByZXEuZmlsZXNbXCJmaWxlc1tdXCJdOyAvLyBnZXQgdGhlIGltYWdlIGZyb20gcG9zdGVkIGZpbGVzW11cclxuICAgIGNvbnN0IGV4dE5hbWUgPSBwYXRoLmV4dG5hbWUodGFyZ2V0RmlsZS5uYW1lKTsgLy8gZ2V0IHRoZSBleHRlbnNpb25cclxuICAgIGNvbnN0IGJhc2VOYW1lID0gdXVpZDQoKTsgLy8gZ2VuZXJhdGUgYSByYW5kb20gdXVpZDQsIHdpbGwgYmUgdXNlZCBhcyBuZXcgbmFtZVxyXG4gICAgbGV0IHVwbG9hZERpciA9IHBhdGguam9pbihfX2Rpcm5hbWUsIFwidGVtcFwiLCBgJHtiYXNlTmFtZX0ke2V4dE5hbWV9YCk7IC8vIHVwbG9hZERpciB3aWxsIGJlIHRlbXAve2Jhc2VuYW1lfS57ZXh0bmFtZX1cclxuXHJcbiAgICB0YXJnZXRGaWxlLm12KHVwbG9hZERpciwgKGVycikgPT4geyAvLyBtb3ZpbmcgdGhlIHVwbG9hZGVkIGltYWdlIHRvIHVwbG9hZCBkaXJcclxuICAgICAgICBpZiAoZXJyKSByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoZXJyKTsgLy8gcmV0dXJuaW5nIGFuIGVycm9yIGlmIGZhaWxlZFxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gcmVzLnNlbmQoYCR7YmFzZU5hbWV9JHtleHROYW1lfWApOyAvLyByZXR1cm5pbmcgdGhlIGltYWdlIHdpdGggbmV3IG5hbWVcclxufSk7XHJcblxyXG5hcHAuZ2V0KFwiL2ltYWdlLzppbWFnZW5hbWVcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgXCJ0ZW1wXCIsIHJlcS5wYXJhbXMuaW1hZ2VuYW1lKSk7IC8vIHNlcnZpbmcgdGhlIGltYWdlIGF0IGltYWdlL3tpbWFnZW5hbWV9IChpbmNsdWRlcyB0aGUgZXh0ZW5zaW9uKVxyXG59KTtcclxuXHJcbnNlcnZlci5saXN0ZW4oNTAwMCwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJHZXQgcmVhZHkgZm9yIHNvbWUgZnVuISEhXCIpO1xyXG59KTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "server",
        "require",
        "Server",
        "uuid4",
        "v4",
        "set",
        "path",
        "join",
        "__dirname",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "createParentPath",
        "db",
        "socketDb",
        "msgDb",
        "sockets",
        "init",
        "get",
        "req",
        "res",
        "redirect",
        "render",
        "post",
        "username",
        "body",
        "name",
        "firstName",
        "lastName",
        "targetFile",
        "files",
        "extName",
        "extname",
        "baseName",
        "uploadDir",
        "mv",
        "err",
        "status",
        "send",
        "sendFile",
        "params",
        "imagename",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Node Projects\\ChatAppAssignment\\src\\",
      "sourcesContent": [
        "import express from \"express\";\r\nconst app = express(); // getting an Express app\r\nconst server = require(\"http\").Server(app); // creating the server, will be used in socket.io\r\nimport path from \"path\"; // used in handling image upload\r\nconst { v4: uuid4 } = require(\"uuid\"); // get a random uuid4, v4 is imported as uuid4\r\nimport fs from \"fs\";\r\n\r\napp.set(\"views\", path.join(__dirname, \"/views\")); // views shall be served from views/ dir\r\napp.set(\"view engine\", \"ejs\"); // ejs is the view engine\r\napp.use(express.static(\"public\")); // static will be served from public/\r\napp.use(express.json());\r\napp.use(\r\n    express.urlencoded({\r\n        extended: true,\r\n    })\r\n);\r\n\r\napp.use(\r\n    require(\"express-fileupload\")({ // middleware handling file upload\r\n        createParentPath: true,\r\n    })\r\n);\r\n\r\nvar db = {};\r\nvar socketDb = {};\r\nvar msgDb = {};\r\n\r\nimport sockets from \"./sockets\";\r\nsockets.init(server, db, socketDb);\r\n\r\napp.get(\"/\", (req, res) => {\r\n    res.redirect(\"login\");\r\n});\r\n\r\napp.get(\"/login\", (req, res) => {\r\n    res.render(\"login\");\r\n});\r\n\r\napp.post(\"/room\", (req, res) => {\r\n    res.render(\"room\", {\r\n        username: req.body.username,\r\n        name: req.body.firstName + \" \" + req.body.lastName,\r\n    });\r\n});\r\n\r\napp.post(\"/images\", (req, res) => {\r\n    const targetFile = req.files[\"files[]\"]; // get the image from posted files[]\r\n    const extName = path.extname(targetFile.name); // get the extension\r\n    const baseName = uuid4(); // generate a random uuid4, will be used as new name\r\n    let uploadDir = path.join(__dirname, \"temp\", `${baseName}${extName}`); // uploadDir will be temp/{basename}.{extname}\r\n\r\n    targetFile.mv(uploadDir, (err) => { // moving the uploaded image to upload dir\r\n        if (err) return res.status(500).send(err); // returning an error if failed\r\n    });\r\n    return res.send(`${baseName}${extName}`); // returning the image with new name\r\n});\r\n\r\napp.get(\"/image/:imagename\", (req, res) => {\r\n    res.sendFile(path.join(__dirname, \"temp\", req.params.imagename)); // serving the image at image/{imagename} (includes the extension)\r\n});\r\n\r\nserver.listen(5000, () => {\r\n    console.log(\"Get ready for some fun!!!\");\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616046986728
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\Node Projects\\\\ChatAppAssignment\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Node Projects\\\\ChatAppAssignment\",\"filename\":\"D:\\\\Node Projects\\\\ChatAppAssignment\\\\src\\\\sockets.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Node Projects\\\\ChatAppAssignment\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\Node Projects\\ChatAppAssignment\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Node Projects\\ChatAppAssignment",
      "filename": "D:\\Node Projects\\ChatAppAssignment\\src\\sockets.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\Node Projects\\ChatAppAssignment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Node Projects\\ChatAppAssignment\\src\\sockets.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Node Projects\\ChatAppAssignment\\src\\sockets.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Node Projects\\ChatAppAssignment\\src\\",
        "sourceFileName": "sockets.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _require = require(\"uuid\"),\n    uuid4 = _require.v4; // uuid4, used in creating a temp room with a random name\n\n\nvar sockets = {};\n\nvar usernameMapper = function usernameMapper(db) {\n  // returns a map of {Username: Fullname}\n  var newDb = {};\n  Object.entries(db).forEach(function (k) {\n    // console.table(k);\n    newDb[k[0]] = k[1].fullName;\n  });\n  return newDb;\n};\n\nsockets.init = function (server, db, socketDb) {\n  var io = require(\"socket.io\")(server); // server from index.js used in socket.io server\n\n\n  io.on(\"connection\", function (socket) {\n    // on connection...\n    console.log(\"Socket Connected : \".concat(socket.id));\n    socket.emit(\"connected\", usernameMapper(db));\n    socket.join(\"room\"); // room is the place for broadcast\n\n    socket.on(\"subscribe\", function (username, fullName) {\n      // * same socket object is present inside socket.on(...)\n      var user = {\n        // user object has socket and the fullName\n        socket: socket,\n        fullName: fullName\n      };\n      db[username] = user; // db gets key username, value user\n\n      socketDb[socket.id] = username; // socketDb, stores the socket objects, key is socket, value is username\n\n      socket.to(\"room\").broadcast.emit(\"user-connected\", username, fullName, usernameMapper(db)); // broadcasting that a user has connected, handler in script.js\n    });\n    socket.on(\"disconnect\", function () {\n      // * same socket object is present inside socket.on(...)\n      var username = socketDb[socket.id]; // getting username from socketDb using socket.id key\n\n      console.log(username);\n      console.log(\"Socket Disconnected : \".concat(socket.id));\n      var user = db[username]; // getting the user {socket, fullName} from db\n      // console.log(user);\n\n      delete db[username];\n      delete socketDb[socket.id];\n      socket.to(\"room\").broadcast.emit(\"user-disconnected\", username, user.fullName); // broadcasting that a user has disconnected\n    });\n    socket.on(\"send-msg\", function (type, username, msg, contacts) {\n      // sending a message\n      if (type === \"b\") {\n        // type is b for broadcast\n        socket.to(\"room\").broadcast.emit(\"msg-received\", username, msg, type); // broadcasting the message\n      } else {\n        // else creating a room\n        var tempRoom = uuid4(); // temp room with a random uuid4 name\n\n        console.log(contacts); // contacts as selected from the contact selection dropdown\n\n        contacts.forEach(function (element) {\n          db[element].socket.join(tempRoom); // getting the sockets using the usernames and joining them to the temp room\n        });\n        socket.to(tempRoom).broadcast.emit(\"msg-received\", username, msg, type); // sending the message in our temp room\n\n        contacts.forEach(function (element) {\n          db[element].socket.join(\"room\"); // joining the broadcast room back again, after message is sent.\n        });\n      }\n    });\n    socket.on(\"send-image\", function (type, username, msg, contacts) {\n      // sending an image as a message\n      console.log(msg);\n\n      if (type === \"b\") {\n        // same procedure as in send-msg handler\n        socket.to(\"room\").broadcast.emit(\"receive-image\", username, msg, type);\n      } else {\n        var tempRoom = uuid4();\n        console.log(contacts);\n        contacts.forEach(function (element) {\n          db[element].socket.join(tempRoom);\n        });\n        socket.to(tempRoom).broadcast.emit(\"receive-image\", username, msg, type);\n        contacts.forEach(function (element) {\n          db[element].socket.join(\"room\");\n        });\n      }\n    });\n  });\n}; // module.exports = sockets;\n\n\nvar _default = sockets;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sockets.js"
      ],
      "names": [
        "require",
        "uuid4",
        "v4",
        "sockets",
        "usernameMapper",
        "db",
        "newDb",
        "Object",
        "entries",
        "forEach",
        "k",
        "fullName",
        "init",
        "server",
        "socketDb",
        "io",
        "on",
        "socket",
        "console",
        "log",
        "id",
        "emit",
        "join",
        "username",
        "user",
        "to",
        "broadcast",
        "type",
        "msg",
        "contacts",
        "tempRoom",
        "element"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\Node Projects\\ChatAppAssignment\\src\\",
      "sourcesContent": [
        "const { v4: uuid4 } = require(\"uuid\"); // uuid4, used in creating a temp room with a random name\r\n\r\nconst sockets = {};\r\n\r\nconst usernameMapper = (db) => { // returns a map of {Username: Fullname}\r\n    let newDb = {};\r\n    Object.entries(db).forEach((k) => {\r\n        // console.table(k);\r\n        newDb[k[0]] = k[1].fullName;\r\n    });\r\n    return newDb;\r\n};\r\n\r\nsockets.init = (server, db, socketDb) => {\r\n    const io = require(\"socket.io\")(server); // server from index.js used in socket.io server\r\n    io.on(\"connection\", (socket) => { // on connection...\r\n        console.log(`Socket Connected : ${socket.id}`);\r\n        socket.emit(\"connected\", usernameMapper(db));\r\n        socket.join(\"room\"); // room is the place for broadcast\r\n        socket.on(\"subscribe\", (username, fullName) => { // * same socket object is present inside socket.on(...)\r\n            let user = { // user object has socket and the fullName\r\n                socket,\r\n                fullName,\r\n            };\r\n            db[username] = user; // db gets key username, value user\r\n            socketDb[socket.id] = username; // socketDb, stores the socket objects, key is socket, value is username\r\n            socket\r\n                .to(\"room\")\r\n                .broadcast.emit(\r\n                    \"user-connected\",\r\n                    username,\r\n                    fullName,\r\n                    usernameMapper(db)\r\n                ); // broadcasting that a user has connected, handler in script.js\r\n        });\r\n        socket.on(\"disconnect\", () => { // * same socket object is present inside socket.on(...)\r\n            let username = socketDb[socket.id]; // getting username from socketDb using socket.id key\r\n            console.log(username);\r\n            console.log(`Socket Disconnected : ${socket.id}`);\r\n            let user = db[username]; // getting the user {socket, fullName} from db\r\n            // console.log(user);\r\n            delete db[username];\r\n            delete socketDb[socket.id];\r\n            socket\r\n                .to(\"room\")\r\n                .broadcast.emit(\"user-disconnected\", username, user.fullName); // broadcasting that a user has disconnected\r\n        });\r\n        socket.on(\"send-msg\", (type, username, msg, contacts) => { // sending a message\r\n            if (type === \"b\") { // type is b for broadcast\r\n                socket\r\n                    .to(\"room\")\r\n                    .broadcast.emit(\"msg-received\", username, msg, type); // broadcasting the message\r\n            } else { // else creating a room\r\n                let tempRoom = uuid4(); // temp room with a random uuid4 name\r\n                console.log(contacts); // contacts as selected from the contact selection dropdown\r\n                contacts.forEach((element) => {\r\n                    db[element].socket.join(tempRoom); // getting the sockets using the usernames and joining them to the temp room\r\n                });\r\n                socket\r\n                    .to(tempRoom)\r\n                    .broadcast.emit(\"msg-received\", username, msg, type); // sending the message in our temp room\r\n                contacts.forEach((element) => {\r\n                    db[element].socket.join(\"room\"); // joining the broadcast room back again, after message is sent.\r\n                });\r\n            }\r\n        });\r\n        socket.on(\"send-image\", (type, username, msg, contacts) => { // sending an image as a message\r\n            console.log(msg);\r\n            if (type === \"b\") { // same procedure as in send-msg handler\r\n                socket\r\n                    .to(\"room\")\r\n                    .broadcast.emit(\"receive-image\", username, msg, type);\r\n            } else {\r\n                let tempRoom = uuid4();\r\n                console.log(contacts);\r\n                contacts.forEach((element) => {\r\n                    db[element].socket.join(tempRoom);\r\n                });\r\n                socket\r\n                    .to(tempRoom)\r\n                    .broadcast.emit(\"receive-image\", username, msg, type);\r\n                contacts.forEach((element) => {\r\n                    db[element].socket.join(\"room\");\r\n                });\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n// module.exports = sockets;\r\nexport default sockets;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616058572378
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment\",\"filename\":\"/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment",
      "filename": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _sockets = _interopRequireDefault(require(\"./sockets\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); // getting an Express app\n\nvar server = require(\"http\").Server(app); // creating the server, will be used in socket.io\n\n\n// used in handling image upload\nvar _require = require(\"uuid\"),\n    uuid4 = _require.v4; // get a random uuid4, v4 is imported as uuid4\n\n\napp.set(\"views\", _path[\"default\"].join(__dirname, \"/views\")); // views shall be served from views/ dir\n\napp.set(\"view engine\", \"ejs\"); // ejs is the view engine\n\napp.use(_express[\"default\"][\"static\"](\"public\")); // static will be served from public/\n\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(require(\"express-fileupload\")({\n  // middleware handling file upload\n  createParentPath: true\n}));\nvar db = {};\nvar socketDb = {};\nvar msgDb = {};\n\n_sockets[\"default\"].init(server, db, socketDb);\n\napp.get(\"/\", function (req, res) {\n  res.redirect(\"login\");\n});\napp.get(\"/login\", function (req, res) {\n  res.render(\"login\");\n});\napp.post(\"/room\", function (req, res) {\n  res.render(\"room\", {\n    username: req.body.username,\n    name: req.body.firstName + \" \" + req.body.lastName\n  });\n});\napp.post(\"/images\", function (req, res) {\n  var targetFile = req.files[\"files[]\"]; // get the image from posted files[]\n\n  var extName = _path[\"default\"].extname(targetFile.name); // get the extension\n\n\n  var baseName = uuid4(); // generate a random uuid4, will be used as new name\n\n  var uploadDir = _path[\"default\"].join(__dirname, \"temp\", \"\".concat(baseName).concat(extName)); // uploadDir will be temp/{basename}.{extname}\n\n\n  targetFile.mv(uploadDir, function (err) {\n    // moving the uploaded image to upload dir\n    if (err) return res.status(500).send(err); // returning an error if failed\n  });\n  return res.send(\"\".concat(baseName).concat(extName)); // returning the image with new name\n});\napp.get(\"/image/:imagename\", function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname, \"temp\", req.params.imagename)); // serving the image at image/{imagename} (includes the extension)\n});\nserver.listen(5000, function () {\n  console.log(\"Get ready for some fun!!!\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInNlcnZlciIsInJlcXVpcmUiLCJTZXJ2ZXIiLCJ1dWlkNCIsInY0Iiwic2V0IiwicGF0aCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImNyZWF0ZVBhcmVudFBhdGgiLCJkYiIsInNvY2tldERiIiwibXNnRGIiLCJzb2NrZXRzIiwiaW5pdCIsImdldCIsInJlcSIsInJlcyIsInJlZGlyZWN0IiwicmVuZGVyIiwicG9zdCIsInVzZXJuYW1lIiwiYm9keSIsIm5hbWUiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsInRhcmdldEZpbGUiLCJmaWxlcyIsImV4dE5hbWUiLCJleHRuYW1lIiwiYmFzZU5hbWUiLCJ1cGxvYWREaXIiLCJtdiIsImVyciIsInN0YXR1cyIsInNlbmQiLCJzZW5kRmlsZSIsInBhcmFtcyIsImltYWdlbmFtZSIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBR0E7O0FBRUE7O0FBc0JBOzs7O0FBMUJBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBQXVCOztBQUN2QixJQUFNQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQVAsQ0FBZ0JDLE1BQWhCLENBQXVCSCxHQUF2QixDQUFmLEMsQ0FBNEM7OztBQUNuQjtlQUNIRSxPQUFPLENBQUMsTUFBRCxDO0lBQWpCRSxLLFlBQUpDLEUsRUFBK0I7OztBQUd2Q0wsR0FBRyxDQUFDTSxHQUFKLENBQVEsT0FBUixFQUFpQkMsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixDQUFqQixFLENBQWtEOztBQUNsRFQsR0FBRyxDQUFDTSxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QixFLENBQStCOztBQUMvQk4sR0FBRyxDQUFDVSxHQUFKLENBQVFDLDhCQUFlLFFBQWYsQ0FBUixFLENBQW1DOztBQUNuQ1gsR0FBRyxD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c2Vycy9zYW5kaXBhbnNhaGEvQXNzaWdubWVudHMvSW50ZXJuZXQtVGVjaC9DaGF0QXBwQXNzaWdubWVudC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcclxuY29uc3QgYXBwID0gZXhwcmVzcygpOyAvLyBnZXR0aW5nIGFuIEV4cHJlc3MgYXBwXHJcbmNvbnN0IHNlcnZlciA9IHJlcXVpcmUoXCJodHRwXCIpLlNlcnZlcihhcHApOyAvLyBjcmVhdGluZyB0aGUgc2VydmVyLCB3aWxsIGJlIHVzZWQgaW4gc29ja2V0LmlvXHJcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7IC8vIHVzZWQgaW4gaGFuZGxpbmcgaW1hZ2UgdXBsb2FkXHJcbmNvbnN0IHsgdjQ6IHV1aWQ0IH0gPSByZXF1aXJlKFwidXVpZFwiKTsgLy8gZ2V0IGEgcmFuZG9tIHV1aWQ0LCB2NCBpcyBpbXBvcnRlZCBhcyB1dWlkNFxyXG5pbXBvcnQgZnMgZnJvbSBcImZzXCI7XHJcblxyXG5hcHAuc2V0KFwidmlld3NcIiwgcGF0aC5qb2luKF9fZGlybmFtZSwgXCIvdmlld3NcIikpOyAvLyB2aWV3cyBzaGFsbCBiZSBzZXJ2ZWQgZnJvbSB2aWV3cy8gZGlyXHJcbmFwcC5zZXQoXCJ2aWV3IGVuZ2luZVwiLCBcImVqc1wiKTsgLy8gZWpzIGlzIHRoZSB2aWV3IGVuZ2luZVxyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKFwicHVibGljXCIpKTsgLy8gc3RhdGljIHdpbGwgYmUgc2VydmVkIGZyb20gcHVibGljL1xyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcclxuYXBwLnVzZShcclxuICAgIGV4cHJlc3MudXJsZW5jb2RlZCh7XHJcbiAgICAgICAgZXh0ZW5kZWQ6IHRydWUsXHJcbiAgICB9KVxyXG4pO1xyXG5cclxuYXBwLnVzZShcclxuICAgIHJlcXVpcmUoXCJleHByZXNzLWZpbGV1cGxvYWRcIikoeyAvLyBtaWRkbGV3YXJlIGhhbmRsaW5nIGZpbGUgdXBsb2FkXHJcbiAgICAgICAgY3JlYXRlUGFyZW50UGF0aDogdHJ1ZSxcclxuICAgIH0pXHJcbik7XHJcblxyXG52YXIgZGIgPSB7fTtcclxudmFyIHNvY2tldERiID0ge307XHJcbnZhciBtc2dEYiA9IHt9O1xyXG5cclxuaW1wb3J0IHNvY2tldHMgZnJvbSBcIi4vc29ja2V0c1wiO1xyXG5zb2NrZXRzLmluaXQoc2VydmVyLCBkYiwgc29ja2V0RGIpO1xyXG5cclxuYXBwLmdldChcIi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMucmVkaXJlY3QoXCJsb2dpblwiKTtcclxufSk7XHJcblxyXG5hcHAuZ2V0KFwiL2xvZ2luXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnJlbmRlcihcImxvZ2luXCIpO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KFwiL3Jvb21cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMucmVuZGVyKFwicm9vbVwiLCB7XHJcbiAgICAgICAgdXNlcm5hbWU6IHJlcS5ib2R5LnVzZXJuYW1lLFxyXG4gICAgICAgIG5hbWU6IHJlcS5ib2R5LmZpcnN0TmFtZSArIFwiIFwiICsgcmVxLmJvZHkubGFzdE5hbWUsXHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5hcHAucG9zdChcIi9pbWFnZXNcIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB0YXJnZXRGaWxlID0gcmVxLmZpbGVzW1wiZmlsZXNbXVwiXTsgLy8gZ2V0IHRoZSBpbWFnZSBmcm9tIHBvc3RlZCBmaWxlc1tdXHJcbiAgICBjb25zdCBleHROYW1lID0gcGF0aC5leHRuYW1lKHRhcmdldEZpbGUubmFtZSk7IC8vIGdldCB0aGUgZXh0ZW5zaW9uXHJcbiAgICBjb25zdCBiYXNlTmFtZSA9IHV1aWQ0KCk7IC8vIGdlbmVyYXRlIGEgcmFuZG9tIHV1aWQ0LCB3aWxsIGJlIHVzZWQgYXMgbmV3IG5hbWVcclxuICAgIGxldCB1cGxvYWREaXIgPSBwYXRoLmpvaW4oX19kaXJuYW1lLCBcInRlbXBcIiwgYCR7YmFzZU5hbWV9JHtleHROYW1lfWApOyAvLyB1cGxvYWREaXIgd2lsbCBiZSB0ZW1wL3tiYXNlbmFtZX0ue2V4dG5hbWV9XHJcblxyXG4gICAgdGFyZ2V0RmlsZS5tdih1cGxvYWREaXIsIChlcnIpID0+IHsgLy8gbW92aW5nIHRoZSB1cGxvYWRlZCBpbWFnZSB0byB1cGxvYWQgZGlyXHJcbiAgICAgICAgaWYgKGVycikgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGVycik7IC8vIHJldHVybmluZyBhbiBlcnJvciBpZiBmYWlsZWRcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHJlcy5zZW5kKGAke2Jhc2VOYW1lfSR7ZXh0TmFtZX1gKTsgLy8gcmV0dXJuaW5nIHRoZSBpbWFnZSB3aXRoIG5ldyBuYW1lXHJcbn0pO1xyXG5cclxuYXBwLmdldChcIi9pbWFnZS86aW1hZ2VuYW1lXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUsIFwidGVtcFwiLCByZXEucGFyYW1zLmltYWdlbmFtZSkpOyAvLyBzZXJ2aW5nIHRoZSBpbWFnZSBhdCBpbWFnZS97aW1hZ2VuYW1lfSAoaW5jbHVkZXMgdGhlIGV4dGVuc2lvbilcclxufSk7XHJcblxyXG5zZXJ2ZXIubGlzdGVuKDUwMDAsICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKFwiR2V0IHJlYWR5IGZvciBzb21lIGZ1biEhIVwiKTtcclxufSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "server",
        "require",
        "Server",
        "uuid4",
        "v4",
        "set",
        "path",
        "join",
        "__dirname",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "createParentPath",
        "db",
        "socketDb",
        "msgDb",
        "sockets",
        "init",
        "get",
        "req",
        "res",
        "redirect",
        "render",
        "post",
        "username",
        "body",
        "name",
        "firstName",
        "lastName",
        "targetFile",
        "files",
        "extName",
        "extname",
        "baseName",
        "uploadDir",
        "mv",
        "err",
        "status",
        "send",
        "sendFile",
        "params",
        "imagename",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/",
      "sourcesContent": [
        "import express from \"express\";\r\nconst app = express(); // getting an Express app\r\nconst server = require(\"http\").Server(app); // creating the server, will be used in socket.io\r\nimport path from \"path\"; // used in handling image upload\r\nconst { v4: uuid4 } = require(\"uuid\"); // get a random uuid4, v4 is imported as uuid4\r\nimport fs from \"fs\";\r\n\r\napp.set(\"views\", path.join(__dirname, \"/views\")); // views shall be served from views/ dir\r\napp.set(\"view engine\", \"ejs\"); // ejs is the view engine\r\napp.use(express.static(\"public\")); // static will be served from public/\r\napp.use(express.json());\r\napp.use(\r\n    express.urlencoded({\r\n        extended: true,\r\n    })\r\n);\r\n\r\napp.use(\r\n    require(\"express-fileupload\")({ // middleware handling file upload\r\n        createParentPath: true,\r\n    })\r\n);\r\n\r\nvar db = {};\r\nvar socketDb = {};\r\nvar msgDb = {};\r\n\r\nimport sockets from \"./sockets\";\r\nsockets.init(server, db, socketDb);\r\n\r\napp.get(\"/\", (req, res) => {\r\n    res.redirect(\"login\");\r\n});\r\n\r\napp.get(\"/login\", (req, res) => {\r\n    res.render(\"login\");\r\n});\r\n\r\napp.post(\"/room\", (req, res) => {\r\n    res.render(\"room\", {\r\n        username: req.body.username,\r\n        name: req.body.firstName + \" \" + req.body.lastName,\r\n    });\r\n});\r\n\r\napp.post(\"/images\", (req, res) => {\r\n    const targetFile = req.files[\"files[]\"]; // get the image from posted files[]\r\n    const extName = path.extname(targetFile.name); // get the extension\r\n    const baseName = uuid4(); // generate a random uuid4, will be used as new name\r\n    let uploadDir = path.join(__dirname, \"temp\", `${baseName}${extName}`); // uploadDir will be temp/{basename}.{extname}\r\n\r\n    targetFile.mv(uploadDir, (err) => { // moving the uploaded image to upload dir\r\n        if (err) return res.status(500).send(err); // returning an error if failed\r\n    });\r\n    return res.send(`${baseName}${extName}`); // returning the image with new name\r\n});\r\n\r\napp.get(\"/image/:imagename\", (req, res) => {\r\n    res.sendFile(path.join(__dirname, \"temp\", req.params.imagename)); // serving the image at image/{imagename} (includes the extension)\r\n});\r\n\r\nserver.listen(5000, () => {\r\n    console.log(\"Get ready for some fun!!!\");\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616046986728
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment\",\"filename\":\"/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/sockets.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment",
      "filename": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/sockets.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/sockets.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/sockets.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/",
        "sourceFileName": "sockets.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _require = require(\"uuid\"),\n    uuid4 = _require.v4; // uuid4, used in creating a temp room with a random name\n\n\nvar sockets = {};\n\nvar usernameMapper = function usernameMapper(db) {\n  // returns a map of {Username: Fullname}\n  var newDb = {};\n  Object.entries(db).forEach(function (k) {\n    // console.table(k);\n    newDb[k[0]] = k[1].fullName;\n  });\n  return newDb;\n};\n\nsockets.init = function (server, db, socketDb) {\n  var io = require(\"socket.io\")(server); // server from index.js used in socket.io server\n\n\n  io.on(\"connection\", function (socket) {\n    // on connection...\n    console.log(\"Socket Connected : \".concat(socket.id));\n    socket.emit(\"connected\", usernameMapper(db));\n    socket.join(\"room\"); // room is the place for broadcast\n\n    socket.on(\"subscribe\", function (username, fullName) {\n      // * same socket object is present inside socket.on(...)\n      var user = {\n        // user object has socket and the fullName\n        socket: socket,\n        fullName: fullName\n      };\n      db[username] = user; // db gets key username, value user\n\n      socketDb[socket.id] = username; // socketDb, stores the socket objects, key is socket, value is username\n\n      socket.to(\"room\").broadcast.emit(\"user-connected\", username, fullName, usernameMapper(db)); // broadcasting that a user has connected, handler in script.js\n    });\n    socket.on(\"disconnect\", function () {\n      // * same socket object is present inside socket.on(...)\n      var username = socketDb[socket.id]; // getting username from socketDb using socket.id key\n\n      console.log(username);\n      console.log(\"Socket Disconnected : \".concat(socket.id));\n      var user = db[username]; // getting the user {socket, fullName} from db\n      // console.log(user);\n\n      delete db[username];\n      delete socketDb[socket.id];\n      socket.to(\"room\").broadcast.emit(\"user-disconnected\", username, user.fullName); // broadcasting that a user has disconnected\n    });\n    socket.on(\"send-msg\", function (type, username, msg, contacts) {\n      // sending a message\n      if (type === \"b\") {\n        // type is b for broadcast\n        socket.to(\"room\").broadcast.emit(\"msg-received\", username, msg, type); // broadcasting the message\n      } else {\n        // else creating a room\n        var tempRoom = uuid4(); // temp room with a random uuid4 name\n\n        console.log(contacts); // contacts as selected from the contact selection dropdown\n\n        contacts.forEach(function (element) {\n          db[element].socket.join(tempRoom); // getting the sockets using the usernames and joining them to the temp room\n        });\n        socket.to(tempRoom).broadcast.emit(\"msg-received\", username, msg, type); // sending the message in our temp room\n\n        contacts.forEach(function (element) {\n          db[element].socket.join(\"room\"); // joining the broadcast room back again, after message is sent.\n        });\n      }\n    });\n    socket.on(\"send-image\", function (type, username, msg, contacts) {\n      // sending an image as a message\n      console.log(msg);\n\n      if (type === \"b\") {\n        // same procedure as in send-msg handler\n        socket.to(\"room\").broadcast.emit(\"receive-image\", username, msg, type);\n      } else {\n        var tempRoom = uuid4();\n        console.log(contacts);\n        contacts.forEach(function (element) {\n          db[element].socket.join(tempRoom);\n        });\n        socket.to(tempRoom).broadcast.emit(\"receive-image\", username, msg, type);\n        contacts.forEach(function (element) {\n          db[element].socket.join(\"room\");\n        });\n      }\n    });\n  });\n}; // module.exports = sockets;\n\n\nvar _default = sockets;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sockets.js"
      ],
      "names": [
        "require",
        "uuid4",
        "v4",
        "sockets",
        "usernameMapper",
        "db",
        "newDb",
        "Object",
        "entries",
        "forEach",
        "k",
        "fullName",
        "init",
        "server",
        "socketDb",
        "io",
        "on",
        "socket",
        "console",
        "log",
        "id",
        "emit",
        "join",
        "username",
        "user",
        "to",
        "broadcast",
        "type",
        "msg",
        "contacts",
        "tempRoom",
        "element"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/sandipansaha/Assignments/Internet-Tech/ChatAppAssignment/src/",
      "sourcesContent": [
        "const { v4: uuid4 } = require(\"uuid\"); // uuid4, used in creating a temp room with a random name\r\n\r\nconst sockets = {};\r\n\r\nconst usernameMapper = (db) => { // returns a map of {Username: Fullname}\r\n    let newDb = {};\r\n    Object.entries(db).forEach((k) => {\r\n        // console.table(k);\r\n        newDb[k[0]] = k[1].fullName;\r\n    });\r\n    return newDb;\r\n};\r\n\r\nsockets.init = (server, db, socketDb) => {\r\n    const io = require(\"socket.io\")(server); // server from index.js used in socket.io server\r\n    io.on(\"connection\", (socket) => { // on connection...\r\n        console.log(`Socket Connected : ${socket.id}`);\r\n        socket.emit(\"connected\", usernameMapper(db));\r\n        socket.join(\"room\"); // room is the place for broadcast\r\n        socket.on(\"subscribe\", (username, fullName) => { // * same socket object is present inside socket.on(...)\r\n            let user = { // user object has socket and the fullName\r\n                socket,\r\n                fullName,\r\n            };\r\n            db[username] = user; // db gets key username, value user\r\n            socketDb[socket.id] = username; // socketDb, stores the socket objects, key is socket, value is username\r\n            socket\r\n                .to(\"room\")\r\n                .broadcast.emit(\r\n                    \"user-connected\",\r\n                    username,\r\n                    fullName,\r\n                    usernameMapper(db)\r\n                ); // broadcasting that a user has connected, handler in script.js\r\n        });\r\n        socket.on(\"disconnect\", () => { // * same socket object is present inside socket.on(...)\r\n            let username = socketDb[socket.id]; // getting username from socketDb using socket.id key\r\n            console.log(username);\r\n            console.log(`Socket Disconnected : ${socket.id}`);\r\n            let user = db[username]; // getting the user {socket, fullName} from db\r\n            // console.log(user);\r\n            delete db[username];\r\n            delete socketDb[socket.id];\r\n            socket\r\n                .to(\"room\")\r\n                .broadcast.emit(\"user-disconnected\", username, user.fullName); // broadcasting that a user has disconnected\r\n        });\r\n        socket.on(\"send-msg\", (type, username, msg, contacts) => { // sending a message\r\n            if (type === \"b\") { // type is b for broadcast\r\n                socket\r\n                    .to(\"room\")\r\n                    .broadcast.emit(\"msg-received\", username, msg, type); // broadcasting the message\r\n            } else { // else creating a room\r\n                let tempRoom = uuid4(); // temp room with a random uuid4 name\r\n                console.log(contacts); // contacts as selected from the contact selection dropdown\r\n                contacts.forEach((element) => {\r\n                    db[element].socket.join(tempRoom); // getting the sockets using the usernames and joining them to the temp room\r\n                });\r\n                socket\r\n                    .to(tempRoom)\r\n                    .broadcast.emit(\"msg-received\", username, msg, type); // sending the message in our temp room\r\n                contacts.forEach((element) => {\r\n                    db[element].socket.join(\"room\"); // joining the broadcast room back again, after message is sent.\r\n                });\r\n            }\r\n        });\r\n        socket.on(\"send-image\", (type, username, msg, contacts) => { // sending an image as a message\r\n            console.log(msg);\r\n            if (type === \"b\") { // same procedure as in send-msg handler\r\n                socket\r\n                    .to(\"room\")\r\n                    .broadcast.emit(\"receive-image\", username, msg, type);\r\n            } else {\r\n                let tempRoom = uuid4();\r\n                console.log(contacts);\r\n                contacts.forEach((element) => {\r\n                    db[element].socket.join(tempRoom);\r\n                });\r\n                socket\r\n                    .to(tempRoom)\r\n                    .broadcast.emit(\"receive-image\", username, msg, type);\r\n                contacts.forEach((element) => {\r\n                    db[element].socket.join(\"room\");\r\n                });\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n// module.exports = sockets;\r\nexport default sockets;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1616058572378
  }
}